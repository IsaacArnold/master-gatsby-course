{"version":3,"sources":["webpack:///./src/styles/Grids.js","webpack:///./src/components/LoadingGrid.js","webpack:///./src/utils/useLatestData.js","webpack:///./src/components/ItemGrid.js","webpack:///./src/pages/index.js"],"names":["HomePageGrid","styled","div","ItemsGrid","ItemStyles","LoadingGrid","count","Array","from","length","_","i","className","src","alt","width","height","gql","String","raw","deets","ItemGrid","items","map","item","name","image","asset","url","style","background","metadata","lqip","backgroundSize","CurrentlySlicing","slicemasters","HotSlices","hotSlices","HomePage","useState","setHotSlices","setSlicemasters","useEffect","console","log","fetch","process","method","headers","body","JSON","stringify","query","then","res","json","data","StoreSettings","slicemaster","catch","err","useLatestData"],"mappings":"0IAEaA,EAAeC,IAAOC,IAAV,0EAAGD,CAAH,kFAMZE,EAAYF,IAAOC,IAAV,uEAAGD,CAAH,+DAOTG,EAAaH,IAAOC,IAAV,wEAAGD,CAAH,mdCSRI,EArBK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACE,cAACH,EAAD,UACGI,MAAMC,KAAK,CAAEC,OAAQH,IAAS,SAACI,EAAGC,GAAJ,OAC7B,eAACP,EAAD,WACE,4BACE,sBAAMQ,UAAU,OAAhB,0BAEF,qBACEA,UAAU,UACVC,IAAI,0HACJC,IAAI,UACJC,MAAM,MACNC,OAAO,iB,ihBCdnB,IAAMC,EAAMC,OAAOC,IAEbC,EAAQH,EAAH,KCDX,IAwBeI,EAxBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,cAACnB,EAAD,UACGmB,EAAMC,KAAI,SAACC,GAAD,OACT,eAACpB,EAAD,WACE,4BACE,sBAAMQ,UAAU,OAAhB,SAAwBY,EAAKC,SAE/B,qBACEV,MAAM,MACNC,OAAO,MACPH,IAAQW,EAAKE,MAAMC,MAAMC,IAAtB,wBACHd,IAAKU,EAAKC,KACVI,MAAO,CACLC,WAAW,OAAQN,EAAKE,MAAMC,MAAMI,SAASC,KAAnC,IACVC,eAAgB,oBCZ9B,SAASC,EAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aAC1B,OACE,gCACE,oBAAIvB,UAAU,SAAd,SACE,sBAAMA,UAAU,YAAhB,+BAEF,qEACEuB,GAAgB,cAAC,EAAD,CAAa7B,MAAO,IACrC6B,KAAiBA,aAAD,EAACA,EAAc1B,SAC9B,8DAED0B,aAAA,EAAAA,EAAc1B,SAAU,cAAC,EAAD,CAAUa,MAAOa,OAKhD,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UACnB,OACE,gCACE,oBAAIzB,UAAU,SAAd,SACE,sBAAMA,UAAU,YAAhB,0BAEF,4DACEyB,GAAa,cAAC,EAAD,CAAa/B,MAAO,IAClC+B,KAAcA,aAAD,EAACA,EAAW5B,SAAU,sDACnC4B,aAAA,EAAAA,EAAW5B,SAAU,cAAC,EAAD,CAAUa,MAAOe,OAmB9BC,UAdf,WAAqB,IAAD,EFnBL,WAAyB,MAEJC,qBAA3BF,EAF+B,KAEpBG,EAFoB,OAIED,qBAAjCJ,EAJ+B,KAIjBM,EAJiB,KA0CtC,OApCAC,qBAAU,WACRC,QAAQC,IAAI,iBAEZC,MAAMC,+DAAqC,CACzCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOnC,EAAF,IAKKG,EAGAA,OAOXiC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAGLd,EAAac,EAAIE,KAAKC,cAAcpB,WACpCI,EAAgBa,EAAIE,KAAKC,cAAcC,gBAExCC,OAAM,SAACC,GACNjB,QAAQC,IAAI,YACZD,QAAQC,IAAIgB,QAEf,IACI,CACLvB,YACAF,gBExBkC0B,GAA5B1B,EADU,EACVA,aAAcE,EADJ,EACIA,UACtB,OACE,sBAAKzB,UAAU,SAAf,UACE,yDACA,mEACA,eAACZ,EAAD,WACE,cAACkC,EAAD,CAAkBC,aAAcA,IAChC,cAACC,EAAD,CAAWC,UAAWA","file":"component---src-pages-index-js-f03c2cb906f8789355e6.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const HomePageGrid = styled.div`\n  display: grid;\n  grid-gap: 2rem;\n  grid-template-columns: repeat(2, minmax(auto, 1fr));\n`;\n\nexport const ItemsGrid = styled.div`\n  display: grid;\n  grid-gap: 2rem;\n  grid-template-columns: 1fr 1fr;\n`;\n\n// Single grid item (for home page)\nexport const ItemStyles = styled.div`\n  text-align: center;\n  position: relative;\n  img {\n    height: auto;\n    font-size: 0;\n  }\n  p {\n    transform: rotate(-2deg) translateY(-140%);\n    position: absolute;\n    width: 100%;\n    left: 0;\n  }\n  .mark {\n    display: inline;\n  }\n  @keyframes shine {\n    from {\n      background-position: 200%;\n    }\n    to {\n      background-position: -40px;\n    }\n  }\n  img.loading {\n    --shine: white;\n    --background: var(--grey);\n    background-image: linear-gradient(\n      90deg,\n      var(--background) 0px,\n      var(--shine) 40px,\n      var(--background) 80px\n    );\n    background-size: 500px;\n    animation: shine 1s infinite linear;\n  }\n`;\n","import React from \"react\";\nimport { ItemsGrid, ItemStyles } from \"../styles/Grids\";\n\nconst LoadingGrid = ({ count }) => {\n  return (\n    <ItemsGrid>\n      {Array.from({ length: count }, (_, i) => (\n        <ItemStyles>\n          <p>\n            <span className=\"mark\">Loading...</span>\n          </p>\n          <img\n            className=\"loading\"\n            src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUAAAAECAQAAADsOj3LAAAADklEQVR42mNkgANGQkwAAJoABWH6GPAAAAAASUVORK5CYII=\"\n            alt=\"Loading\"\n            width=\"500\"\n            height=\"400\"\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGrid>\n  );\n};\n\nexport default LoadingGrid;\n","import { useState, useEffect } from \"react\";\n\nconst gql = String.raw;\n\nconst deets = gql`\n    name\n    _id\n    image {\n      asset {\n        url\n        metadata {\n          lqip\n        }\n      }\n    }\n`;\n\nexport default function useLatestData() {\n  // hot slices\n  const [hotSlices, setHotSlices] = useState();\n  // slicemasters\n  const [slicemasters, setSlicemasters] = useState();\n  // Use a side effect to fetcht he data from the graphql endpoint\n  useEffect(function () {\n    console.log(\"FETCHING DATA\");\n    // when the component loads, fetch the data\n    fetch(process.env.GATSBY_GRAPHQL_ENDPOINT, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: gql`\n          query {\n            StoreSettings(id: \"downtown\") {\n              name\n              slicemaster {\n                ${deets}\n              }\n              hotSlices {\n                ${deets}\n              }\n            }\n          }\n        `,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // TODO: checl for errors\n        // set the data to state\n        setHotSlices(res.data.StoreSettings.hotSlices);\n        setSlicemasters(res.data.StoreSettings.slicemaster);\n      })\n      .catch((err) => {\n        console.log(\"SHOOOOOT\");\n        console.log(err);\n      });\n  }, []);\n  return {\n    hotSlices,\n    slicemasters,\n  };\n}\n","import React from \"react\";\nimport { ItemsGrid, ItemStyles } from \"../styles/Grids\";\n\nconst ItemGrid = ({ items }) => {\n  return (\n    <ItemsGrid>\n      {items.map((item) => (\n        <ItemStyles>\n          <p>\n            <span className=\"mark\">{item.name}</span>\n          </p>\n          <img\n            width=\"500\"\n            height=\"400\"\n            src={`${item.image.asset.url}?w=500&h=400&fit=crop`}\n            alt={item.name}\n            style={{\n              background: `url(${item.image.asset.metadata.lqip})`,\n              backgroundSize: \"cover\",\n            }}\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGrid>\n  );\n};\n\nexport default ItemGrid;\n","import React from \"react\";\nimport LoadingGrid from \"../components/LoadingGrid\";\nimport { HomePageGrid } from \"../styles/Grids\";\nimport useLatestData from \"../utils/useLatestData\";\nimport ItemGrid from \"../components/ItemGrid\";\n\nfunction CurrentlySlicing({ slicemasters }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Slicemasters On</span>\n      </h2>\n      <p>Standing by, ready to slice you up!</p>\n      {!slicemasters && <LoadingGrid count={4} />}\n      {slicemasters && !slicemasters?.length && (\n        <p>No one is working right now!</p>\n      )}\n      {slicemasters?.length && <ItemGrid items={slicemasters} />}\n    </div>\n  );\n}\n\nfunction HotSlices({ hotSlices }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Hot Slices</span>\n      </h2>\n      <p>Come on by, buy the slice!</p>\n      {!hotSlices && <LoadingGrid count={4} />}\n      {hotSlices && !hotSlices?.length && <p>Nothing in the case!</p>}\n      {hotSlices?.length && <ItemGrid items={hotSlices} />}\n    </div>\n  );\n}\n\nfunction HomePage() {\n  const { slicemasters, hotSlices } = useLatestData();\n  return (\n    <div className=\"center\">\n      <h1>The Best Pizza Downtown</h1>\n      <p>Open 11am to 11pm Every Single Day</p>\n      <HomePageGrid>\n        <CurrentlySlicing slicemasters={slicemasters} />\n        <HotSlices hotSlices={hotSlices} />\n      </HomePageGrid>\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"sourceRoot":""}